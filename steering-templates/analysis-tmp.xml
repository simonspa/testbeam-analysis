<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Thu Jul 25 11:42:56 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

  <execute>
    <processor name="AIDA"/>
    <processor name="LoadPreAlignment"/>
    <processor name="LoadAlignment"/>
    <processor name="ApplyPreAlignment"/>
    <processor name="ApplyAlignment"/>
    <processor name="MyEUTelAnalysisCMSPixel"/>
    <processor name="EUTelUtilityPrintEventNumber"/>
  </execute>

  <global>
    <parameter name="LCIOInputFiles"> @LcioPath@/run@RunNumber@-hitmaker.slcio</parameter>
    <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
    <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
    <parameter name="SkipNEvents" value="0"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" value="@Verbosity@"/>
  </global>

  <processor name="AIDA" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int" value="1"/>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value="@HistogramPath@/run@RunNumber@-analysis"/>
    <!-- type of output file root (default) or xml )-->
    <parameter name="FileType" type="string" value="root"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>


  <processor name="LoadPreAlignment" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @DatabasePath@/run@AlignmentRun@-prealign-db.slcio alignment </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="LoadAlignment" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> alignment @DatabasePath@/run@AlignmentRun@-align-db.slcio alignment </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
    <!--Apply to the input hit the alignment corrections-->
    <!--Alignment constant from the condition file-->
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
    <!--The name of the input hit collection-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
    <!--The name of the output hit collection-->
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> prealignedhits </parameter>
    <!--Rotation Angle around X axis-->
    <!--parameter name="Alpha" type="double" value="0"/-->
    <!--Available directinos are:
		  0 -> direct  
    1 -> reverse -->
    <parameter name="ApplyAlignmentDirection" type="int" value="0"/>
    <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
    <!--parameter name="ApplyToReferenceCollection" type="bool" value="false"/-->
    <!--Rotation Angle around Y axis-->
    <!--parameter name="Beta" type="double" value="0"/-->
    <!--Available methods are:
		  0 -> shift only 
    1 -> rotation first 
    2 -> shift first -->
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <!--Enable or disable DEBUG mode -->
    <parameter name="DEBUG" type="bool" value="false"/>
    <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <!--Apply alignment steps in one go. Is supposed to be used for reversealignment in reverse order, like: undoAlignment, undoPreAlignment, undoGear -->
    <!--parameter name="DoAlignmentInOneGo" type="bool" value="false"/-->
    <!--Implement geometry shifts and rotations as described in GEAR steering file -->
    <!--parameter name="DoGear" type="bool" value="false"/-->
    <!--Rotation Angle around Z axis-->
    <!--parameter name="Gamma" type="double" value="0"/-->
    <!--Enable or disable histograms-->
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <!--This is the name of the modified output reference hit collection-->
    <!--parameter name="OutputReferenceCollection" type="string" value="output_refhit"/-->
    <!--Events number to have DEBUG1 printed outs (default=10)-->
    <parameter name="PrintEvents" type="int" value="0"/>
    <!--This is the name of the reference hit collection-->
    <!--parameter name="ReferenceCollection" type="string" value="referenceHit"/-->
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <parameter name="Verbosity" type="string" value="WARNING4"/>
    <!--List of alignment collections that were applied to the DUT-->
    <parameter name="alignmentCollectionNames" type="StringVec" value="prealign"/>
    <!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
    <parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
    <!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
    <parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
  </processor> 
  
  <processor name="ApplyAlignment" type="EUTelApplyAlignmentProcessor">
    <!--Apply to the input hit the alignment corrections-->
    <!--Alignment constant from the condition file-->
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment </parameter>
    <!--The name of the input hit collection-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> prealignedhits </parameter>
    <!--The name of the output hit collection-->
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedhits </parameter>
    <!--Rotation Angle around X axis-->
    <!--parameter name="Alpha" type="double" value="0"/-->
    <!--Available directinos are:
		  0 -> direct  
    1 -> reverse -->
    <parameter name="ApplyAlignmentDirection" type="int" value="0"/>
    <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
    <!--parameter name="ApplyToReferenceCollection" type="bool" value="false"/-->
    <!--Rotation Angle around Y axis-->
    <!--parameter name="Beta" type="double" value="0"/-->
    <!--Available methods are:
		  0 -> shift only 
    1 -> rotation first 
    2 -> shift first -->
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <!--Enable or disable DEBUG mode -->
    <parameter name="DEBUG" type="bool" value="false"/>
    <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <!--Apply alignment steps in one go. Is supposed to be used for reversealignment in reverse order, like: undoAlignment, undoPreAlignment, undoGear -->
    <!--parameter name="DoAlignmentInOneGo" type="bool" value="false"/-->
    <!--Implement geometry shifts and rotations as described in GEAR steering file -->
    <!--parameter name="DoGear" type="bool" value="false"/-->
    <!--Rotation Angle around Z axis-->
    <!--parameter name="Gamma" type="double" value="0"/-->
    <!--Enable or disable histograms-->
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <!--This is the name of the modified output reference hit collection-->
    <!--parameter name="OutputReferenceCollection" type="string" value="output_refhit"/-->
    <!--Events number to have DEBUG1 printed outs (default=10)-->
    <parameter name="PrintEvents" type="int" value="10"/>
    <!--This is the name of the reference hit collection-->
    <!--parameter name="ReferenceCollection" type="string" value="referenceHit"/-->
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <parameter name="Verbosity" type="string" value="WARNING0"/>
    <!--List of alignment collections that were applied to the DUT-->
    <parameter name="alignmentCollectionNames" type="StringVec" value="alignment"/>
    <!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
    <parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
    <!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
    <parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
  </processor>

 <processor name="MyEUTelAnalysisCMSPixel" type="EUTelAnalysisCMSPixel">
   <!--Analysis for CMS PSI46 Pixel Detectors as DUT in AIDA telescopes -->
  <!--Name of the input TrackerHit collection of the DUT-->
  <parameter name="InputCollectionDUT" type="string" lcioInType="TrackerHit"> duthits </parameter>
  <!--Name of the input TrackerHit collection of the telescope-->
  <parameter name="InputCollectionTelescope" type="string" lcioInType="TrackerHit"> alignedhits </parameter>
  <!--Name of the input TrackerData (pixels) collection of the DUT-->
  <parameter name="InputPixelsDUT" type="string" lcioInType="TrackerData">CMSPixelDUT</parameter>
  <!--Name of the input TrackerData (pixels) collection of the REF-->
  <parameter name="InputPixelsREF" type="string" lcioInType="TrackerData">CMSPixelREF</parameter>
  <!--Name of the input Track collection of the telescope-->
  <parameter name="InputTrackCollectionTelescope" type="string" lcioOutType="Track"> fittracks </parameter>
  <!--Path to the native CMS data files-->
  <parameter name="CMS_gain_path" type="string" value="@BasePath@/calibrations"/>
  <!--DUT alignment in x-->
  <parameter name="DUT_align_x" type="double" value="@dut_align_x@"/>
  <!--DUT alignment in y-->
  <parameter name="DUT_align_y" type="double" value="@dut_align_y@"/>
  <!--Choose DUT calibration type (psi_tanh, desy_tanh, desy_weibull)-->
  <parameter name="DUT_calibration" type="string" value="@dut_gain_type@"/>
  <!--Serial number of the DUT used in this run-->
  <parameter name="DUT_chip" type="int" value="@dut_chip@"/>
  <!--CMS DUT gain file to be used-->
  <parameter name="DUT_gain" type="string" value="@dut_gain@"/>
  <!--CMS DUT VCAL->electrons conversion factor. Set to 0 if default is to be used.-->
  <parameter name="DUT_conversion" type="string" value="@dut_conversion@"/>
  <!--DUT position z in mm after the telescope plane-->
  <parameter name="DUT_pos_z" type="double" value="@dut_pos_z@"/>
  <!--DUT rotation in xy-->
  <parameter name="DUT_rot" type="double" value="@dut_rot@"/>
  <!--DUT tilt angle-->
  <parameter name="DUT_tilt" type="double" value="@dut_tilt@"/>
  <!--DUT turn angle-->
  <parameter name="DUT_turn" type="double" value="@dut_turn@"/>
  <!--Beam energy [GeV]-->
  <parameter name="Ebeam" type="double" value="@beamenergy@"/>
  <!--REF alignment in x-->
  <parameter name="REF_align_x" type="double" value="@ref_align_x@"/>
  <!--REF alignment in y-->
  <parameter name="REF_align_y" type="double" value="@ref_align_y@"/>
  <!--Choose REF calibration type (psi_tanh, desy_tanh, desy_weibull)-->
  <parameter name="REF_calibration" type="string" value="@ref_gain_type@"/>
  <!--Serial number of the REF used in this run-->
  <parameter name="REF_chip" type="int" value="@ref_chip@"/>
  <!--CMS REF gain file to be used-->
  <parameter name="REF_gain" type="string" value="@ref_gain@"/>
  <!--REF position z in mm after the last telescope plane-->
  <parameter name="REF_pos_z" type="double" value="@ref_pos_z@"/>
  <!--REF rotation in xy-->
  <parameter name="REF_rot" type="double" value="@ref_rot@"/>

  <!--Matching cut in X-->
  <parameter name="matching_cut_x" type="double" value="0.15"/>
  <!--Matching cut in Y-->
  <parameter name="matching_cut_y" type="double" value="0.10"/>

  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string" value="@Verbosity@"/>
  <!--Again, the gear file of the used telescope configuration-->
  <parameter name="gearfile" type="string" value="@GearFile@"/>
  <!--Run number of the telescope alignment run-->
  <parameter name="alignmentrun" type="string" value="@AlignmentRun@"/>
</processor>

 <processor name="EUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int">2500 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool">false </parameter-->
 </processor>

</marlin>
